//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**
     LoginWithCustomID
     
     - parameter loginwithCustomID: (body) This is simple request for login with custom id  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func postLoginwithcustomid(loginwithCustomID: LoginwithCustomID? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: LoginWithCustomIDResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return postLoginwithcustomidWithRequestBuilder(loginwithCustomID: loginwithCustomID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     LoginWithCustomID
     - POST /LoginWithCustomID
     - API Key:
       - type: apiKey Ocp-Apim-Subscription-Key 
       - name: apiKeyHeader
     - API Key:
       - type: apiKey subscription-key (QUERY)
       - name: apiKeyQuery
     - parameter loginwithCustomID: (body) This is simple request for login with custom id  (optional)
     - returns: RequestBuilder<LoginWithCustomIDResponse> 
     */
    open class func postLoginwithcustomidWithRequestBuilder(loginwithCustomID: LoginwithCustomID? = nil) -> RequestBuilder<LoginWithCustomIDResponse> {
        let localVariablePath = "/LoginWithCustomID"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: loginwithCustomID)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<LoginWithCustomIDResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: truetrue)
    }
}
